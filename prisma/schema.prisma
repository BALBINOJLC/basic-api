// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum EUserRole {
  ADMIN
  CLIENT
  OWNER
  USER
  SUPER_ADMIN
  GUEST
}

model User {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  email        String        @unique
  user_name    String        @unique
  first_name   String
  last_name    String
  display_name String
  password     String
  email_verify Boolean       @default(false)
  is_active    Boolean       @default(false)
  phone        String?
  Avatar       File?         @relation(fields: [file_id], references: [id])
  Profiles     UserProfile[]
  file_id      String        @unique @db.ObjectId
  createdAt    DateTime      @default(now())
  deleted_at   DateTime?
  is_deleted   Boolean       @default(false)
  updatedAt    DateTime      @updatedAt

  @@map("users")
}

model UserProfile {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  role       EUserRole
  User       User      @relation(fields: [user_id], references: [id])
  user_id    String    @unique @db.ObjectId
  active     Boolean   @default(false)
  createdAt  DateTime  @default(now())
  deleted_at DateTime?
  is_deleted Boolean   @default(false)
  updatedAt  DateTime  @updatedAt

  @@map("user_profiles")
}

model File {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  url        String?
  name       String
  key        String?
  extension  String?
  mimetype   String?
  size       Int?
  type       String?
  charter    String?
  color      String?
  bucket     String?
  isPublic   Boolean   @default(true)
  User       User?
  createdAt  DateTime  @default(now())
  deleted_at DateTime?
  is_deleted Boolean   @default(false)
  updatedAt  DateTime  @updatedAt

  @@map("files")
}

model Counter {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  seq Int    @default(0)
}
